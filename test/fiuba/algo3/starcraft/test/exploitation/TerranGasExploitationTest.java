package fiuba.algo3.starcraft.test.exploitation;

import static org.junit.Assert.*;

import org.junit.Test;

import fiuba.algo3.starcraft.logic.player.Player;
import fiuba.algo3.starcraft.logic.player.Resources;
import fiuba.algo3.starcraft.logic.structures.ExploitationStructure;
import fiuba.algo3.starcraft.logic.templates.RefineriaTemplate;

public class TerranGasExploitationTest {

	@Test
	public void testPlayerStartWith0G() {
		Resources initialResources = new Resources(200,0);
		Player player = new Player(initialResources);
		assertEquals(player.getGas(), 0);
	}
	
	@Test
	public void test1TurnAdds10GWith1Refineria() {
		Resources initialResources = new Resources(200,0);
		Player player = new Player(initialResources);
		RefineriaTemplate templateRefineria = (RefineriaTemplate) RefineriaTemplate.getInstance();
		ExploitationStructure refineria = templateRefineria.create();
		player.pays(100,0);
		player.newStructure(refineria);
		
		player.newTurn();

		assertEquals(player.getGas(), 110);
	}

	@Test
	public void test1TurnAdds20GWith1Refineria() {
		Resources initialResources = new Resources(200,0);
		Player player = new Player(initialResources);
		RefineriaTemplate templateRefineria = (RefineriaTemplate) RefineriaTemplate.getInstance();
		ExploitationStructure refineria = templateRefineria.create();
		player.pays(100,0);
		player.newStructure(refineria);
		
		for(int i = 0; i < 2; i++) player.newTurn();

		assertEquals(player.getGas(), 120);
	}

	@Test
	public void test30TurnAdds600GWith2Refineria() {
		Resources initialResources = new Resources(200,0);
		Player player = new Player(initialResources);
		RefineriaTemplate templateRefineria = (RefineriaTemplate) RefineriaTemplate.getInstance();
		for(int i = 0; i < 2; i++) {
			ExploitationStructure refineria = templateRefineria.create();
			player.pays(100,0);
			player.newStructure(refineria);
		}
		
		for(int i = 0; i < 30; i++) player.newTurn();

		assertEquals(player.getGas(), 600);
	}

}
