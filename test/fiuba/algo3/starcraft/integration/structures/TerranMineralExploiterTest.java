package fiuba.algo3.starcraft.integration.structures;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

import fiuba.algo3.starcraft.logic.map.Map;
import fiuba.algo3.starcraft.logic.map.Point;
import fiuba.algo3.starcraft.logic.player.Player;
import fiuba.algo3.starcraft.logic.player.Resources;
import fiuba.algo3.starcraft.logic.structures.MineralExploiter;
import fiuba.algo3.starcraft.logic.structures.builders.TerranBuilder;
import fiuba.algo3.starcraft.logic.structures.exceptions.InsufficientResources;
import fiuba.algo3.starcraft.logic.templates.structures.terran.CentroMineralTemplate;

public class TerranMineralExploiterTest {
	Map map;
	Point position;
	Point position2;
	Resources initialResources;
	Player player;
	@Before
	public void before() {
		initialResources = new Resources(200,0);
		map = new Map(1000);
		position = new Point(54,70);
		position2 = new Point(10,70);
		player = new Player(null, null, new TerranBuilder(), position, initialResources, map);
	}
	
	@Test
	public void testPlayerStartWith200M() {
		assertEquals(player.getMineral(), 200);
	}
	
	@Test
	public void test1TurnAdds10MWith1CentroMineral() throws InsufficientResources {
		CentroMineralTemplate templateCenter = new CentroMineralTemplate();
		MineralExploiter mineralCenter = templateCenter.create(position);
		player.pays(50,0); //Centro mineral cuesta 50M
		player.receiveNewStructure(mineralCenter);
		
		player.newTurn();

		assertEquals(player.getMineral(), 160);
	}

	@Test
	public void test1TurnAdds40MWith4CentroMineral() throws InsufficientResources {
		CentroMineralTemplate templateCenter = new CentroMineralTemplate();
		for(int i = 0; i < 4; i++) {
			MineralExploiter mineralCenter = templateCenter.create(position);		
			player.pays(50,0);
			player.receiveNewStructure(mineralCenter);
		}
	
		player.newTurn();
		
		assertEquals(player.getMineral(), 40);
	}

	@Test
	public void test30TurnsAdd1200MWith4CentroMineral() throws InsufficientResources {
		CentroMineralTemplate templateCenter = new CentroMineralTemplate();
		for(int i = 0; i < 4; i++) {
			MineralExploiter mineralCenter = templateCenter.create(position);		
			player.pays(50,0);
			player.receiveNewStructure(mineralCenter);
		}
	
		for(int i = 0; i < 30; i++) player.newTurn();
		
		assertEquals(player.getMineral(), 1200);
	}
	
	@Test
	public void test1TurnAdds20MWith4CentroMineralAnd2Destroyed() throws InsufficientResources {
		CentroMineralTemplate templateCenter = new CentroMineralTemplate();
		for(int i = 0; i < 4; i++) {
			MineralExploiter mineralCenter = templateCenter.create(position);		
			player.pays(50,0);
			player.receiveNewStructure(mineralCenter);
			if (i%2 != 0) mineralCenter.reduceLife(500);
		}
	
		player.newTurn();
		
		assertEquals(player.getMineral(), 20);
	}
	
	@Test
	public void test26TurnAdds780MWith4CentroMineralAnd1Destroyed() throws InsufficientResources {
		CentroMineralTemplate templateCenter = new CentroMineralTemplate();
		for(int i = 0; i < 4; i++) {
			MineralExploiter mineralCenter = templateCenter.create(position);		
			player.pays(50,0);
			player.receiveNewStructure(mineralCenter);
			if (i == 2) mineralCenter.reduceLife(500);
		}
	
		for(int i = 0; i < 26; i++) player.newTurn();
		
		assertEquals(player.getMineral(), 780);
	}

}
